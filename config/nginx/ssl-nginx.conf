events {

}

#stream {

#  upstream bitbucket-ssh {
#    server bitbucket:7999;
#  }

#  server {
#    listen 5001;
#    proxy_pass bitbucket-ssh;
#  }
#}

http {

  server {
    listen 8090 default_server;
    server_name "";
    return 502;
  }

  ########################
  ## JIRA CONFIGURATION ##
  ########################

  ## JIRA HTTP REDIRECT CONFIGURATION
  server {
    listen 8090;
    server_name jira.fires.division;
    return 301 https://$host$request_uri;
  }
 
  ## JIRA SSL CONFIGURATION
  server {
    listen 8443 ssl;
    server_name jira.fires.division;

    ssl_certificate /etc/nginx/ssl/jira.fires.division.crt;
    ssl_certificate_key /etc/nginx/ssl/jira.fires.division.key;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 5m;

    location / {
      proxy_set_header  X-Forwarded-Host $host;
      proxy_set_header  X-Forwarded-Server $host;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass        http://jira:8080;
      client_max_body_size 0;
    }
  }

  ##############################
  ## CONFLUENCE CONFIGURATION ##
  ##############################

  ## CONFLUENCE HTTP REDIRECT CONFIGURATION
  server {
    listen 8090;
    server_name confluence.fires.division;
    return 301 https://$host$request_uri;
  }

  ## CONFLUENCE SSL CONFIGURATION
  server {
    listen 8443 ssl;
    server_name confluence.fires.division;

    ssl_certificate /etc/nginx/ssl/confluence.fires.division.crt;
    ssl_certificate_key /etc/nginx/ssl/confluence.fires.division.key;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 5m;

    location / {
      proxy_set_header      X-Forwarded-Host $host;
      proxy_set_header      X-Forwarded-Server $host;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass            http://confluence:8090;
      client_max_body_size  0;
    }
  }

  #############################
  ## BITBUCKET CONFIGURATION ##
  #############################

  ## BITBUCKET HTTP REDIRECT CONFIGURATION
  server {
    listen 8090;
      server_name bitbucket.fires.division;
      return 301 https://$host$request_uri;
  }

  ## BITUBKCET SSL CONFIGURATION
  server {
    listen 8443 ssl;
    server_name bitbucket.fires.division;

    ssl_certificate /etc/nginx/ssl/bitbucket.fires.division.crt;
    ssl_certificate_key /etc/nginx/ssl/bitbucket.fires.division.key;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 5m;

    location / {
      proxy_set_header       Host $host;
      proxy_set_header        X-Forwarded-Host $host;
      proxy_set_header        X-Forwarded-Server $host;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      client_max_body_size    0;
      client_body_buffer_size 128K;
      proxy_buffer_size       16k;
      proxy_buffers           32 16k;
      proxy_busy_buffers_size 64k;
      proxy_connect_timeout   60;
      proxy_intercept_errors  on;
      proxy_next_upstream     error timeout;
      proxy_redirect          off;
      proxy_send_timeout      90;
      proxy_pass              http://bitbucket:7990;
    }
  }

  #########################
  ## NEXUS CONFIGURATION ##
  #########################

  ## NEXUS HTTP REDIRECT CONFIGURATION
  server {
    listen 8090;
    server_name nexus.fires.division;
    return 301 https://$host$request_uri;
  }

  ## NEXUS SSL CONFIGURATION
  server {
    listen 8443 ssl;
    server_name nexus.fires.division;

    ssl_certificate /etc/nginx/ssl/nexus.fires.division.crt;
    ssl_certificate_key /etc/nginx/ssl/nexus.fires.division.key;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 5m;

    location / {
      proxy_pass        http://nexus:8081;
      proxy_redirect    off;
      proxy_set_header  Host $host:$server_port;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-Proto $scheme;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  X-Forwarded-Port $server_port;
      proxy_set_header  X-Forwarded-Host $host;
      proxy_set_header  X-Forwarded-Server $server_name;
      client_max_body_size 0;
    }
  }

  ## NEXUS REPO.fires.division CONFIGURATION
  server {
    listen       8443 ssl;
    server_name  repo.fires.division;

    ssl_certificate       /etc/nginx/ssl/repo.fires.division.crt;
    ssl_certificate_key   /etc/nginx/ssl/repo.fires.division.key;

    ssl_protocols               TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers                 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers   on;
    ssl_session_cache           shared:SSL:10m;
    ssl_session_timeout         5m;

    location / {
      proxy_pass        http://nexus:9001;
      proxy_redirect    off;
      proxy_set_header  Host $host:$server_port;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-Proto $scheme;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  X-Forwarded-Port $server_port;
      proxy_set_header  X-Forwarded-Host $host;
      proxy_set_header  X-Forwarded-Server $server_name;
      client_max_body_size 0;
    }
  }

  ## NEXUS REGISTRY-1 CONFIGURATION
  server {
    listen       8443 ssl;
    server_name  registry-1.fires.division;

    ssl_certificate       /etc/nginx/ssl/registry-1.fires.division.crt;
    ssl_certificate_key   /etc/nginx/ssl/registry-1.fires.division.key;

    ssl_protocols               TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers                 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers   on;
    ssl_session_cache           shared:SSL:10m;
    ssl_session_timeout         5m;

    location / {
      proxy_pass        http://nexus:9000;
      proxy_redirect    off;
      proxy_set_header  Host $host:$server_port;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-Proto $scheme;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  X-Forwarded-Port $server_port;
      proxy_set_header  X-Forwarded-Host $host;
      proxy_set_header  X-Forwarded-Server $server_name;
      client_max_body_size 0;
    }
  }

  ###########################
  ## BAMBOO CONFIGURATION ##
  ###########################

# server {
#   listen 7999;
#   server_name bitbucket.fires.division:7999;
#   proxy_read_timeout 600s;
#   location / {
#     proxy_set_header X-Forwarded-Host $host;
#     proxy_set_header X-Forwarded-Server $host;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_pass ssh://bitbucket:7999;
#     client_max_body_size 10M;
#   }
# }

  ###########################
  ## JENKINS CONFIGURATION ##
  ###########################

 # upstream jenkinssvr 
 # keepalive 32; # keepalive connections
 # server jenkins:8081; # jenkins ip and port
 # 

 # Required for Jenkins websocket agents
  map $http_upgrade $connection_upgrade { 
    default upgrade;
    '' close;
  }

  server {
    listen 8090;
    server_name jenkins.fires.division;
    return 301 $host$request_uri;
  }

 server {
  #listen 80;       # Listen on port 80 for IPv4 requests
  #server_name jenkins.fires.division;  # replace 'jenkins.example.com' with your server domain name

  listen 8443 ssl;
  server_name jenkins.fires.division;

  ssl_certificate /etc/nginx/ssl/jenkins.fires.division.crt;
  ssl_certificate_key /etc/nginx/ssl/jenkins.fires.division.key;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 5m;
  
  # this is the jenkins web root directory
  # (mentioned in the /etc/default/jenkins file)
  root            /var/run/jenkins/war/;
  # ccess_log      /var/log/nginx/jenkins/access.log;
  # error_log       /var/log/nginx/jenkins/error.log;
  # pass through headers from Jenkins that Nginx considers invalid
  ignore_invalid_headers off;

  location ~ "^/static/[0-9a-fA-F]{8}\/(.*)$" {
    # rewrite all static files into requests to the root
    # E.g /static/12345678/css/something.css will become /css/something.css
    rewrite "^/static/[0-9a-fA-F]{8}\/(.*)" /$1 last;
  }

  location /userContent {
    # have nginx handle all the static requests to userContent folder
    # note : This is the $JENKINS_HOME dir
    root /var/lib/jenkins/;
    if (!-f $request_filename){
      # this file does not exist, might be a directory or a /**view** url
      rewrite (.*) /$1 last;
      break;
    }
    sendfile on;
  }

  location / {
      sendfile off;
      proxy_pass         http://jenkins:8080;
      proxy_redirect     default;
      proxy_http_version 1.1;

      # Required for Jenkins websocket agents
      proxy_set_header   Connection        $connection_upgrade;
      proxy_set_header   Upgrade           $http_upgrade;

      proxy_set_header   Host              $host;
      proxy_set_header   X-Real-IP         $remote_addr;
      proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
      proxy_max_temp_file_size 0;

      #this is the maximum upload size
      client_max_body_size       10m;
      client_body_buffer_size    128k;

      proxy_connect_timeout      90;
      proxy_send_timeout         90;
      proxy_read_timeout         90;
      proxy_buffering            off;
      proxy_request_buffering    off; # Required for HTTP CLI commands
      proxy_set_header Connection ""; # Clear for keepalive
    }
  }
}